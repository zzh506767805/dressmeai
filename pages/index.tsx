import Head from 'next/head'
import { useState } from 'react'
import Script from 'next/script'
import { 
  SparklesIcon, 
  CameraIcon,
  SwatchIcon,
  LightBulbIcon,
  StarIcon 
} from '@heroicons/react/24/solid'

const features = [
  {
    name: 'Virtual Try-On',
    description: 'See exactly how clothes look on you with our advanced AI technology - just like trying them on in a real fitting room.',
    icon: CameraIcon,
  },
  {
    name: 'AI Style Generation',
    description: 'Get complete outfit ideas generated by AI based on your style preferences and current wardrobe.',
    icon: SparklesIcon,
  },
  {
    name: 'Smart Style Recommendations',
    description: 'Receive personalized daily outfit suggestions that match your style, occasion, and weather.',
    icon: LightBulbIcon,
  },
  {
    name: 'Mix & Match',
    description: 'Experiment with different combinations from your wardrobe to create perfect outfits for any occasion.',
    icon: SwatchIcon,
  },
]

const testimonials = [
  {
    content: "The AI try-on feature is incredibly accurate! I can see exactly how clothes will look on me before buying.",
    author: "Sarah Johnson",
    role: "Fashion Enthusiast",
    rating: 5,
  },
  {
    content: "The AI-generated outfit combinations are amazing. It's like having a personal stylist who knows my taste perfectly.",
    author: "Michael Chen",
    role: "Young Professional",
    rating: 5,
  },
  {
    content: "Daily style recommendations are spot-on! It saves me so much time deciding what to wear each morning.",
    author: "Emma Williams",
    role: "Content Creator",
    rating: 5,
  },
]

type SubscriptionStatus = 'idle' | 'loading' | 'success' | 'error'

export default function Home() {
  const [email, setEmail] = useState('')
  const [status, setStatus] = useState<SubscriptionStatus>('idle')
  const [message, setMessage] = useState('')

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setStatus('loading')
    setMessage('')

    try {
      const res = await fetch('/api/subscribe', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      })

      const data = await res.json()

      if (res.ok) {
        setEmail('')
        setStatus('success')
        setMessage(data.message)
      } else {
        setStatus('error')
        setMessage(data.error || 'Something went wrong')
      }
    } catch (error) {
      setStatus('error')
      setMessage('Failed to subscribe. Please try again.')
    }
  }

  // 结构化数据
  const structuredData = {
    "@context": "https://schema.org",
    "@type": "WebApplication",
    "name": "DressMeAI",
    "description": "AI-powered virtual try-on and style recommendation platform",
    "applicationCategory": "Fashion & Style",
    "operatingSystem": "Web Browser",
    "offers": {
      "@type": "Offer",
      "price": "0",
      "priceCurrency": "USD"
    },
    "featureList": [
      "Virtual Try-On",
      "AI Style Generation",
      "Smart Style Recommendations",
      "Mix & Match"
    ],
    "aggregateRating": {
      "@type": "AggregateRating",
      "ratingValue": "5",
      "ratingCount": "3",
      "reviewCount": "3"
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-gray-50 to-white">
      <Head>
        <title>AI Virtual Try-On & Style Generator | DressMeAI - Your Personal Fashion Assistant</title>
        <meta name="description" content="Transform your fashion experience with DressMeAI. Try on clothes virtually, get AI-generated outfits, and receive personalized style recommendations. Start your fashion journey today!" />
        <meta name="keywords" content="AI virtual try-on, AI outfit generator, virtual fitting room, fashion AI, style recommendations, personal stylist AI, virtual clothes fitting, fashion technology, AI fashion assistant, digital wardrobe" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="canonical" href="https://dressmeai.com" />
        
        {/* Language and Region */}
        <meta property="og:locale" content="en_US" />
        <meta property="og:locale:alternate" content="zh_CN" />
        
        {/* Open Graph / Facebook */}
        <meta property="og:type" content="website" />
        <meta property="og:site_name" content="DressMeAI" />
        <meta property="og:title" content="DressMeAI - AI Virtual Try-On & Style Generator" />
        <meta property="og:description" content="Experience the future of fashion with AI virtual try-on and personalized style recommendations." />
        <meta property="og:image" content="https://dressmeai.com/images/og-banner.jpg" />
        <meta property="og:url" content="https://dressmeai.com" />
        
        {/* Twitter */}
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@dressmeai" />
        <meta name="twitter:creator" content="@dressmeai" />
        <meta name="twitter:title" content="DressMeAI - AI Virtual Try-On & Style Generator" />
        <meta name="twitter:description" content="Experience the future of fashion with AI virtual try-on and personalized style recommendations." />
        <meta name="twitter:image" content="https://dressmeai.com/images/og-banner.jpg" />
        
        {/* Additional SEO Meta Tags */}
        <meta name="robots" content="index, follow" />
        <meta name="author" content="DressMeAI Team" />
        <meta name="theme-color" content="#4F46E5" />
        <meta name="application-name" content="DressMeAI" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="default" />
        <meta name="apple-mobile-web-app-title" content="DressMeAI" />
        <meta name="format-detection" content="telephone=no" />
        <meta name="mobile-web-app-capable" content="yes" />
      </Head>

      {/* 添加结构化数据 */}
      <Script
        id="structured-data"
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}
      />

      <main>
        {/* Hero Section */}
        <section className="relative px-4 sm:px-6 lg:px-8 py-20 sm:py-28">
          <div className="mx-auto max-w-5xl">
            <div className="text-center">
              <h1 className="text-5xl sm:text-6xl font-bold tracking-tight text-gray-900 mb-8">
                AI Virtual Try-On<br />
                <span className="bg-gradient-to-r from-indigo-600 to-purple-600 text-transparent bg-clip-text">Your Personal Style Expert</span>
              </h1>
              <p className="text-xl leading-relaxed text-gray-600 max-w-3xl mx-auto">
                Experience clothes virtually before you buy, get AI-curated outfits, and receive daily style recommendations tailored just for you.
              </p>
              <div className="mt-12 flex items-center justify-center gap-x-8">
                <a
                  href="/try-on"
                  className="rounded-lg bg-indigo-600 px-6 py-3 text-base font-semibold text-white shadow-sm hover:bg-indigo-500 transition-colors duration-200"
                >
                  Try Clothes Now
                </a>
                <a href="#features" className="text-base font-semibold leading-6 text-gray-900 hover:text-indigo-600 transition-colors duration-200">
                  See How It Works <span aria-hidden="true">→</span>
                </a>
              </div>
            </div>
          </div>
        </section>

        {/* Features Section */}
        <section id="features" className="py-20 sm:py-28 bg-white">
          <div className="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
            <div className="mx-auto max-w-3xl text-center">
              <h2 className="text-lg font-semibold leading-8 tracking-wide text-indigo-600 uppercase">Core Features</h2>
              <h3 className="mt-3 text-4xl font-bold tracking-tight text-gray-900 sm:text-5xl">
                Your Complete AI Fashion Assistant
              </h3>
              <p className="mt-6 text-xl leading-relaxed text-gray-600">
                From virtual try-ons to personalized style recommendations, our AI technology revolutionizes how you discover and create your perfect look.
              </p>
            </div>
            <div className="mx-auto mt-16 sm:mt-20">
              <dl className="grid grid-cols-1 gap-12 lg:grid-cols-4">
                {features.map((feature) => (
                  <div key={feature.name} className="relative">
                    <dt className="flex items-center gap-x-3 text-lg font-semibold leading-7 text-gray-900">
                      <feature.icon className="h-7 w-7 flex-none text-indigo-600" aria-hidden="true" />
                      {feature.name}
                    </dt>
                    <dd className="mt-4 text-base leading-7 text-gray-600">
                      {feature.description}
                    </dd>
                  </div>
                ))}
              </dl>
            </div>
          </div>
        </section>

        {/* How It Works Section */}
        <section id="how-it-works" className="py-20 sm:py-28 bg-gray-50">
          <div className="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
            <div className="mx-auto max-w-3xl text-center">
              <h2 className="text-lg font-semibold leading-8 tracking-wide text-indigo-600 uppercase">How It Works</h2>
              <h3 className="mt-3 text-4xl font-bold tracking-tight text-gray-900 sm:text-5xl">
                Start Your AI Fashion Journey
              </h3>
            </div>
            <div className="mx-auto mt-16 sm:mt-20">
              <div className="grid grid-cols-1 gap-12 lg:grid-cols-3">
                <div className="text-center">
                  <div className="flex justify-center">
                    <CameraIcon className="h-16 w-16 text-indigo-600" />
                  </div>
                  <h4 className="mt-6 text-xl font-semibold text-gray-900">1. Create Your Profile</h4>
                  <p className="mt-4 text-base leading-relaxed text-gray-600">Upload a photo and share your style preferences to personalize your experience.</p>
                </div>
                <div className="text-center">
                  <div className="flex justify-center">
                    <SparklesIcon className="h-16 w-16 text-indigo-600" />
                  </div>
                  <h4 className="mt-6 text-xl font-semibold text-gray-900">2. Explore Styles</h4>
                  <p className="mt-4 text-base leading-relaxed text-gray-600">Browse clothes and let our AI generate perfect outfit combinations for you.</p>
                </div>
                <div className="text-center">
                  <div className="flex justify-center">
                    <LightBulbIcon className="h-16 w-16 text-indigo-600" />
                  </div>
                  <h4 className="mt-6 text-xl font-semibold text-gray-900">3. Get Inspired</h4>
                  <p className="mt-4 text-base leading-relaxed text-gray-600">Receive daily outfit suggestions and try them on virtually with our AI.</p>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Testimonials Section */}
        <section id="testimonials" className="py-20 sm:py-28 bg-white">
          <div className="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
            <div className="mx-auto max-w-3xl text-center">
              <h2 className="text-lg font-semibold leading-8 tracking-wide text-indigo-600 uppercase">Testimonials</h2>
              <h3 className="mt-3 text-4xl font-bold tracking-tight text-gray-900 sm:text-5xl">
                What Our Users Say
              </h3>
            </div>
            <div className="mx-auto mt-16 sm:mt-20 grid grid-cols-1 gap-8 lg:grid-cols-3">
              {testimonials.map((testimonial, index) => (
                <div key={index} className="flex flex-col bg-gray-50 p-8 rounded-2xl shadow-sm">
                  <div className="flex gap-x-1 mb-4">
                    {[...Array(testimonial.rating)].map((_, i) => (
                      <StarIcon key={i} className="h-6 w-6 text-yellow-400" aria-hidden="true" />
                    ))}
                  </div>
                  <p className="flex-grow text-lg leading-relaxed text-gray-600">{testimonial.content}</p>
                  <div className="mt-8 border-t border-gray-200 pt-6">
                    <p className="font-semibold text-lg text-gray-900">{testimonial.author}</p>
                    <p className="text-base text-gray-600">{testimonial.role}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section id="get-started" className="py-20 sm:py-28 bg-indigo-600">
          <div className="mx-auto max-w-5xl px-4 sm:px-6 lg:px-8">
            <div className="text-center">
              <h2 className="text-4xl font-bold tracking-tight text-white sm:text-5xl">
                Ready to Try AI Fashion?
              </h2>
              <p className="mx-auto mt-6 max-w-2xl text-xl leading-relaxed text-indigo-100">
                Leave your email to get early access and exclusive updates about our AI fashion technology.
              </p>
              <form onSubmit={handleSubmit} className="mt-10 max-w-md mx-auto">
                <div className="flex flex-col sm:flex-row gap-4 justify-center">
                  <div className="flex-grow">
                    <label htmlFor="email" className="sr-only">Email address</label>
                    <input
                      type="email"
                      name="email"
                      id="email"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                      className="block w-full rounded-lg border-0 px-4 py-3 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-500"
                      placeholder="Enter your email"
                      required
                      disabled={status === 'loading'}
                    />
                  </div>
                  <button
                    type="submit"
                    disabled={status === 'loading' || !email}
                    className="flex-none rounded-lg bg-white px-6 py-3 text-base font-semibold text-indigo-600 shadow-sm hover:bg-indigo-50 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    {status === 'loading' ? 'Submitting...' : 'Get Started'}
                  </button>
                </div>
                {status === 'success' && (
                  <p className="mt-2 text-sm text-center text-green-600">
                    Thank you! We'll keep you updated on our latest progress.
                  </p>
                )}
              </form>
            </div>
          </div>
        </section>
      </main>
    </div>
  )
} 